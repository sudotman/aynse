{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"<code>aynse</code>","text":"<p><code>aynse</code> is a lean, modern Python library for fetching data from the National Stock Exchange (NSE) of India. It is a fork of the unmaintained <code>jugaad-data</code> library, aiming to provide a robust and regularly updated tool for financial data analysis.</p> <p>This library fetches data from the new NSE website and is future-proof. Many other libraries still rely on the old website and may eventually stop working.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Historical Data: Fetch historical stock and index data.</li> <li>Derivatives Data: Download futures and options data.</li> <li>Bhavcopy: Download daily bhavcopy reports for equity, F&amp;O, and indices.</li> <li>Live Market Data: Get real-time stock quotes.</li> <li>Holiday Information: Retrieve a list of trading holidays for a given year.</li> <li>Command-Line Interface: A simple CLI for quick data downloads.</li> <li>Pandas Integration: Returns data as Pandas DataFrames for easy analysis.</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>You can install <code>aynse</code> directly from PyPI:</p> <pre><code>pip install aynse\n</code></pre> <p>You can optionally install <code>pandas</code> library in case you are interested in fetching data directly into pandas dataframes, in which case you can run:</p> <pre><code>pip install aynse pandas\n</code></pre>"},{"location":"#quick-start","title":"Quick Start","text":""},{"location":"#download-bhavcopies-and-historical-data","title":"Download Bhavcopies and Historical Data","text":"<pre><code>from datetime import date\nfrom aynse.nse import bhavcopy_save, bhavcopy_fo_save\n\n# Download bhavcopy\nbhavcopy_save(date(2024, 1, 1), \"./\")\n\n# Download bhavcopy for futures and options\nbhavcopy_fo_save(date(2024, 1, 1), \"./\")\n</code></pre>"},{"location":"#fetch-live-quotes","title":"Fetch Live Quotes","text":"<pre><code>from aynse.nse import NSELive\nfrom pprint import pprint\n\nn = NSELive()\nq = n.stock_quote(\"INFY\")\npprint(q)\n</code></pre>"},{"location":"api/","title":"API Reference","text":"<p>This page contains the auto-generated API reference for <code>aynse</code>.</p>"},{"location":"api/#aynse.nse","title":"<code>aynse.nse</code>","text":""},{"location":"api/#aynse.nse.NSEArchives","title":"<code>NSEArchives</code>","text":""},{"location":"api/#aynse.nse.NSEArchives.cutoff_date","title":"<code>cutoff_date = date(2024, 7, 8)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Conventions    d - 1, 12 (without leading zero)   dd - 01, 21 (day of the month with leading zero)   mm - 01, 12 (month with leading zero)    m - 1, 12 (month without leading zero)  MMM - JAN, DEC   yy - 19, 20 yyyy - 2020, 2030</p>"},{"location":"api/#aynse.nse.NSEArchives.bhavcopy_fo_raw","title":"<code>bhavcopy_fo_raw(dt)</code>","text":"<p>Downloads raw F&amp;O bhavcopy text for a specific date</p>"},{"location":"api/#aynse.nse.NSEArchives.bhavcopy_fo_save","title":"<code>bhavcopy_fo_save(dt, dest, skip_if_present=True)</code>","text":"<p>Saves Derivatives Bhavcopy to a directory</p>"},{"location":"api/#aynse.nse.NSEArchives.bhavcopy_raw","title":"<code>bhavcopy_raw(dt)</code>","text":"<p>Downloads raw bhavcopy text for a specific date</p> <p>Uses new NSE API endpoints with date-based format switching. - Before July 8, 2024: Uses old CSV format API - After July 8, 2024: Uses new ZIP format API with different structure</p>"},{"location":"api/#aynse.nse.NSEArchives.bhavcopy_save","title":"<code>bhavcopy_save(dt, dest, skip_if_present=True)</code>","text":"<p>Downloads and saves raw bhavcopy csv file for a specific date</p> <p>Uses new NSE API endpoints with automatic fallback to old archives.</p>"},{"location":"api/#aynse.nse.NSEArchives.bulk_deals_raw","title":"<code>bulk_deals_raw(from_date, to_date)</code>","text":"<p>Downloads bulk deals for a given date range. :param from_date: From date :param to_date: To date :return: JSON response from the API</p>"},{"location":"api/#aynse.nse.NSEArchives.bulk_deals_save","title":"<code>bulk_deals_save(from_date, to_date, dest)</code>","text":"<p>Saves bulk deals for a given date range to a JSON file. :param from_date: From date :param to_date: To date :param dest: Destination directory :return: Path to the saved file</p>"},{"location":"api/#aynse.nse.NSEArchives.full_bhavcopy_raw","title":"<code>full_bhavcopy_raw(dt)</code>","text":"<p>Downloads full raw bhavcopy text for a specific date. This uses the new API endpoint and works for all dates without a cutoff. The endpoint directly returns the CSV content.</p>"},{"location":"api/#aynse.nse.NSEIndexConstituents","title":"<code>NSEIndexConstituents</code>","text":"<p>               Bases: <code>NSEArchives</code></p> <p>NSE Index constituents https://niftyindices.com/indices/equity/broad-based-indices/NIFTY--50 Index constituent link https://niftyindices.com/IndexConstituent/ind_nifty50list.csv Args:     NSEArchives (class): Base class</p>"},{"location":"api/#aynse.nse.NSEIndexConstituents.index_constituent_raw","title":"<code>index_constituent_raw(index_type=str)</code>","text":"<p>Downloads raw index constituent text for a specific index</p>"},{"location":"api/#aynse.nse.NSEIndexConstituents.index_constituent_save","title":"<code>index_constituent_save(index_type, dest, skip_if_present=True)</code>","text":"<p>Downloads and saves index constituent csv for a specific index</p>"},{"location":"api/#aynse.nse.NSEIndexConstituents.index_constituent_save_all","title":"<code>index_constituent_save_all(dest, skip_if_present=True)</code>","text":"<p>Downloads and saves index constituent csv for all known indexes</p>"},{"location":"api/#aynse.nse.NSEIndices","title":"<code>NSEIndices</code>","text":"<p>List of NSE indices</p>"},{"location":"api/#aynse.nse.NSEIndices.get_indices_with_underscores","title":"<code>get_indices_with_underscores()</code>  <code>classmethod</code>","text":"<p>Returns a list of indices with underscores</p>"},{"location":"api/#aynse.nse.NSEIndices.get_indices_without_underscores","title":"<code>get_indices_without_underscores()</code>  <code>classmethod</code>","text":"<p>Returns a list of indices without underscores</p>"},{"location":"api/#aynse.nse.NSEIndicesArchives","title":"<code>NSEIndicesArchives</code>","text":"<p>               Bases: <code>NSEArchives</code></p>"},{"location":"api/#aynse.nse.NSEIndicesArchives.bhavcopy_index_raw","title":"<code>bhavcopy_index_raw(dt)</code>","text":"<p>Downloads raw index bhavcopy text for a specific date</p>"},{"location":"api/#aynse.nse.NSEIndicesArchives.bhavcopy_index_save","title":"<code>bhavcopy_index_save(dt, dest, skip_if_present=True)</code>","text":"<p>Downloads and saves index bhavcopy csv for a specific date</p>"},{"location":"api/#aynse.nse.NSELive","title":"<code>NSELive</code>","text":""},{"location":"api/#aynse.nse.NSELive.corporate_announcements","title":"<code>corporate_announcements(segment='equities', from_date=None, to_date=None, symbol=None)</code>","text":"<p>This function returns the corporate annoucements  (https://www.nseindia.com/companies-listing/corporate-filings-announcements)</p>"},{"location":"api/#aynse.nse.live_cache","title":"<code>live_cache(app_name)</code>","text":"<p>Caches the output for time_out specified. This is done in order to prevent hitting live quote requests to NSE too frequently. This wrapper will fetch the quote/live result first time and return the same result for any calls within 'time_out' seconds.</p> Logic <p>key = concat of args try:     cached_value = self._cache[key]     if now - self._cache['tstamp'] &lt; time_out         return cached_value['value'] except AttributeError: # _cache attribute has not been created yet     self._cache = {} finally:     val = fetch-new-value     new_value = {'tstamp': now, 'value': val}     self._cache[key] = new_value     return val</p>"},{"location":"api/#aynse.holidays","title":"<code>aynse.holidays</code>","text":""},{"location":"api/#aynse.rbi","title":"<code>aynse.rbi</code>","text":""},{"location":"api/#aynse.rbi.RBI","title":"<code>RBI</code>","text":""},{"location":"api/#aynse.rbi.RBI.current_rates","title":"<code>current_rates()</code>","text":"<p>DEPRECATED: This function is broken because of website changes.</p>"},{"location":"cli/","title":"Command-Line Interface","text":"<p><code>aynse</code> comes with a powerful command-line interface. Simply type <code>aynse --help</code> to explore all available options.</p> <pre><code>aynse --help\n</code></pre>"},{"location":"cli/#download-bhavcopies","title":"Download Bhavcopies","text":"<pre><code>aynse bhavcopy --help\n</code></pre> <p>Download today's bhavcopy: (Works only after market hours)</p> <pre><code>aynse bhavcopy -d /path/to/dir\n</code></pre> <p>Download bhavcopy for a specific date:</p> <pre><code>aynse bhavcopy -d /path/to/dir -f 2024-01-01\n</code></pre> <p>Download all bhavcopies between a date range:</p> <pre><code>aynse bhavcopy -d /path/to/dir -f 2024-01-01 -t 2024-01-31\n</code></pre> <p>Download full bhavcopies with delivery trade quantity:</p> <pre><code>aynse bhavcopy -d /path/to/dir -f 2024-01-01 -t 2024-01-31 --full\n</code></pre> <p>Download index bhavcopies:</p> <pre><code>aynse bhavcopy -d /path/to/dir -f 2024-01-01 -t 2024-01-31 --idx\n</code></pre> <p>Download derivatives bhavcopies:</p> <pre><code>aynse bhavcopy -d /path/to/dir -f 2024-01-01 -t 2024-01-31 --fo\n</code></pre>"},{"location":"cli/#download-historical-stock-data","title":"Download Historical Stock Data","text":"<pre><code>aynse stock --help\n</code></pre> <p>Download historical stock data:</p> <pre><code>aynse stock -s RELIANCE -f 2024-01-01 -t 2024-01-31 -o RELIANCE-Jan.csv\n</code></pre>"},{"location":"cli/#download-historical-index-data","title":"Download Historical Index Data","text":"<pre><code>aynse index --help\n</code></pre> <p>Download historical index data:</p> <pre><code>aynse index -s \"NIFTY 50\" -f 2024-01-01 -t 2024-01-31 -o NIFTY-Jan.csv\n</code></pre>"},{"location":"cli/#download-futures-options-data","title":"Download Futures &amp; Options Data","text":"<pre><code>aynse derivatives --help\n</code></pre> <p>Download stock futures data:</p> <pre><code>aynse derivatives -s RELIANCE -f 2024-01-01 -t 2024-01-31 -e 2024-01-25 -i FUTSTK -o file_name.csv\n</code></pre> <p>Download index futures data:</p> <pre><code>aynse derivatives -s NIFTY -f 2024-01-01 -t 2024-01-31 -e 2024-01-25 -i FUTIDX -o file_name.csv\n</code></pre> <p>Download stock call options data:</p> <pre><code>aynse derivatives -s RELIANCE -f 2024-01-01 -t 2024-01-31 -e 2024-01-25 -i OPTSTK -p 2800 --ce -o file_name.csv\n</code></pre> <p>Download index put options data:</p> <pre><code>aynse derivatives -s NIFTY -f 2024-01-01 -t 2024-01-25 -e 2024-01-25 -i OPTIDX -p 21000 --pe -o file_name.csv\n</code></pre>"},{"location":"historical/","title":"Historical Data","text":""},{"location":"historical/#download-bhavcopies","title":"Download Bhavcopies","text":"<p>You can download bhavcopies for stocks, indices, and futures &amp; options using <code>aynse</code>. The example below shows how to download different bhavcopies for January 1, 2024, and save them to a directory in CSV format.</p> <pre><code>from datetime import date\nfrom aynse.nse import bhavcopy_save, full_bhavcopy_save, bhavcopy_fo_save, bhavcopy_index_save\n\nbhavcopy_save(date(2024, 1, 1), \"/path/to/directory\")\nfull_bhavcopy_save(date(2024, 1, 1), \"/path/to/directory\")\nbhavcopy_fo_save(date(2024, 1, 1), \"/path/to/directory\")\nbhavcopy_index_save(date(2024, 1, 1), \"/path/to/directory\")\n</code></pre> <p>Note: The difference between <code>bhavcopy_save</code> and <code>full_bhavcopy_save</code> is that the full bhavcopy also includes the percentage of volume that was for delivery.</p>"},{"location":"historical/#download-historical-stock-data","title":"Download Historical Stock Data","text":"<pre><code>from datetime import date\nfrom aynse.nse import stock_csv, stock_df\n\n# Download as pandas dataframe\ndf = stock_df(symbol=\"RELIANCE\", from_date=date(2024, 1, 1),\n              to_date=date(2024, 1, 31), series=\"EQ\")\nprint(df.head())\n\n# Download data and save to a CSV file\nstock_csv(symbol=\"RELIANCE\", from_date=date(2024, 1, 1),\n          to_date=date(2024, 1, 31), series=\"EQ\", output=\"/path/to/file.csv\")\n</code></pre>"},{"location":"historical/#download-historical-index-data","title":"Download Historical Index Data","text":"<pre><code>from aynse.nse import index_csv, index_df\n\n# Download as pandas dataframe\ndf = index_df(symbol=\"NIFTY 50\", from_date=date(2024, 1, 1),\n              to_date=date(2024, 1, 31))\nprint(df.head())\n\n# Download as a CSV file\nindex_csv(symbol=\"NIFTY 50\", from_date=date(2024, 1, 1),\n          to_date=date(2024, 1, 31), output=\"/path/to/file.csv\")\n</code></pre>"},{"location":"historical/#download-historical-derivatives-data","title":"Download Historical Derivatives Data","text":""},{"location":"historical/#get-expiry-dates","title":"Get Expiry Dates","text":"<p>For a given day, fetch expiry dates of all active contracts.</p> <pre><code>from datetime import date\nfrom aynse.nse import expiry_dates\n\nexpiries = expiry_dates(date(2024, 1, 1))\nprint(expiries)\n</code></pre> <p>You can filter it further based on the contract type (e.g., <code>OPTIDX</code>, <code>FUTSTK</code>).</p> <pre><code>from datetime import date\nfrom aynse.nse import expiry_dates\n\nexpiries = expiry_dates(date(2024, 1, 1), \"FUTSTK\")\nprint(expiries)\n</code></pre>"},{"location":"historical/#master-functions-for-derivatives-data","title":"Master Functions for Derivatives Data","text":"<p>Use <code>derivatives_df</code> to download historical data for a given contract into a pandas DataFrame.</p> <pre><code>def derivatives_df(symbol, from_date, to_date, expiry_date, instrument_type, option_type, strike_price):\n    \"\"\"\n    Downloads historical data for a given contract into a pandas dataframe.\n\n    Args:\n        symbol (str): Stock symbol (e.g., \"SBIN\" or \"NIFTY\").\n        from_date (datetime.date): Start date.\n        to_date (datetime.date): End date.\n        expiry_date (datetime.date): Expiry date.\n        instrument_type (str): \"FUTSTK\", \"FUTIDX\", \"OPTSTK\", or \"OPTIDX\".\n        option_type (str): \"CE\" for call or \"PE\" for put (required for options).\n        strike_price (float): Strike price (required for options).\n    \"\"\"\n</code></pre> <p>To download as a CSV file, use <code>derivatives_csv</code> and provide an <code>output</code> path.</p>"},{"location":"historical/#stock-futures","title":"Stock Futures","text":"<pre><code>from aynse.nse import derivatives_df\n\ndf = derivatives_df(symbol=\"RELIANCE\", from_date=date(2024, 1, 1), to_date=date(2024, 1, 31),\n                    expiry_date=date(2024, 1, 25), instrument_type=\"FUTSTK\")\nprint(df.head())\n</code></pre>"},{"location":"historical/#stock-options","title":"Stock Options","text":"<pre><code>from aynse.nse import derivatives_df\n\ndf = derivatives_df(symbol=\"RELIANCE\", from_date=date(2024, 1, 1), to_date=date(2024, 1, 31),\n                    expiry_date=date(2024, 1, 25), instrument_type=\"OPTSTK\", \n                    option_type=\"CE\", strike_price=2800)\nprint(df.head())\n</code></pre>"},{"location":"historical/#index-futures","title":"Index Futures","text":"<pre><code>from aynse.nse import derivatives_df\n\ndf = derivatives_df(symbol=\"NIFTY\", from_date=date(2024, 1, 1), to_date=date(2024, 1, 31),\n                    expiry_date=date(2024, 1, 25), instrument_type=\"FUTIDX\")\nprint(df.head())\n</code></pre>"},{"location":"historical/#index-options","title":"Index Options","text":"<pre><code>from aynse.nse import derivatives_df\n\ndf = derivatives_df(symbol=\"NIFTY\", from_date=date(2024, 1, 1), to_date=date(2024, 1, 31),\n                    expiry_date=date(2024, 1, 25), instrument_type=\"OPTIDX\", \n                    option_type=\"CE\", strike_price=21000)\nprint(df.head())\n</code></pre>"},{"location":"live/","title":"Live Data","text":"<p>This documentation is currently under construction.</p>"}]}