name: Upload Python Package

on:
  workflow_run:
    workflows: ["run-tests"]
    types:
      - completed
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: pyproject.toml

      # ────────────────────────────────────────────────────────────────────────────
      # 1) Install & upgrade all build‐time tools so setuptools>=61 (PEP‑621) is used
      - name: Upgrade pip and install build tools
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel build twine

      # ────────────────────────────────────────────────────────────────────────────
      # 2) Build both sdist and wheel explicitly
      - name: Build distributions
        run: python -m build --sdist --wheel

      # ────────────────────────────────────────────────────────────────────────────
      # 3) (Optional, but highly recommended) Dump out the first lines of METADATA
      #    so you can see Name: and Version: in the Actions log
      - name: Inspect wheel METADATA
        run: |
          echo ">>> METADATA for your wheel:"
          unzip -p dist/aynse-*py3-none-any.whl '*.dist-info/METADATA' | head -n 20
          echo ">>> End METADATA"

      # ────────────────────────────────────────────────────────────────────────────
      # 4) Verify before upload
      - name: Check distributions
        run: twine check dist/*

      # ────────────────────────────────────────────────────────────────────────────
      # 5) Publish to PyPI via the pypa Action (it picks up PYPI_API_TOKEN for you)
      - name: Publish
        uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
